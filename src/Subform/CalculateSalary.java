package Subform;

import Database.connectDB;
import Model.SalaryTableCellRenderer;
import Model.comboBoxHeight;
import Model.message;
import java.awt.event.ItemEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class CalculateSalary extends javax.swing.JInternalFrame {

    Connection con = connectDB.getConnect();
    String sql;
    DecimalFormat df = new DecimalFormat("#,###");
    DefaultTableModel model = new DefaultTableModel();
    message m;
    public static String id;
    public static String Month;
    public static List<String[]> rowsData = new ArrayList<>();
    int currentMonth=LocalDate.now().getMonthValue();

    public CalculateSalary() {
        initComponents();
        model = (DefaultTableModel) table.getModel();
        cmbMonth.setRenderer(new comboBoxHeight());
        loadData();
        table.fixTable(jScrollPane1);
        cmbMonth.setSelectedIndex(currentMonth-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        cmbMonth = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        btnpay = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new Model.Table();

        setBorder(null);
        setClosable(true);
        setFrameIcon(null);

        jPanel5.setBackground(new java.awt.Color(213, 216, 219));
        jPanel5.setBorder(javax.swing.BorderFactory.createMatteBorder(15, 15, 15, 15, new java.awt.Color(213, 216, 219)));
        jPanel5.setPreferredSize(new java.awt.Dimension(100, 145));
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(213, 216, 219));
        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "ຈ່າຍເງິນເດືອນໃຫ້ພະນັກງານ(ອາຈານ)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Saysettha MX", 0, 16)), javax.swing.BorderFactory.createMatteBorder(10, 10, 10, 10, new java.awt.Color(213, 216, 219)))); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanel1.setLayout(new net.miginfocom.swing.MigLayout());

        cmbMonth.setFont(new java.awt.Font("Saysettha OT", 0, 16)); // NOI18N
        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cmbMonth.setPreferredSize(new java.awt.Dimension(240, 50));
        cmbMonth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonthItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbMonth);

        jPanel2.setBackground(new java.awt.Color(213, 216, 219));
        jPanel2.setPreferredSize(new java.awt.Dimension(20, 50));
        jPanel1.add(jPanel2);

        btnpay.setBackground(new java.awt.Color(0, 102, 255));
        btnpay.setFont(new java.awt.Font("Saysettha OT", 1, 18)); // NOI18N
        btnpay.setForeground(new java.awt.Color(255, 255, 255));
        btnpay.setText("ຈ່າຍເງິນ");
        btnpay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnpay.setPreferredSize(new java.awt.Dimension(150, 50));
        btnpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpayActionPerformed(evt);
            }
        });
        jPanel1.add(btnpay);

        jPanel5.add(jPanel1);

        getContentPane().add(jPanel5, java.awt.BorderLayout.PAGE_START);

        jPanel6.setBackground(new java.awt.Color(213, 216, 219));
        jPanel6.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 15, 15, 15, new java.awt.Color(213, 216, 219)));
        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ລະຫັດ", "ຊື່", "ເພດ", "ສະຖານະ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setFont(new java.awt.Font("Saysettha OT", 0, 16)); // NOI18N
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel6.add(jScrollPane1);

        getContentPane().add(jPanel6, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 1550, 798);
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked


    }//GEN-LAST:event_tableMouseClicked

    private void cmbMonthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonthItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            loadData();
        }
    }//GEN-LAST:event_cmbMonthItemStateChanged

    private void btnpayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpayActionPerformed
        int row = table.getSelectedRow();
        if (row == -1) {
            m = new message("ກະລຸນາເລືອກພະນັກງານທີ່ຈະຈ່າຍເງິນໃຫ້ກ່ອນ!");
            JOptionPane.showMessageDialog(this, m);

        } else {
            String status = table.getValueAt(row, 3).toString();
            if (status.equals("ຍັງບໍ່ທັນຈ່າຍ")) {
                if (row >= 0) {
                    id = table.getValueAt(row, 0).toString();
                    Month = cmbMonth.getSelectedItem().toString();

                    pay p = new pay(null, true, id, Month, this);
                    p.setVisible(true);

                }
            } else if (status.equals("ຈ່າຍແລ້ວ")) {
                m = new message("ໄດ້ຈ່າຍແລ້ວ");
                JOptionPane.showMessageDialog(this, m);
            }
        }
    }//GEN-LAST:event_btnpayActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnpay;
    private javax.swing.JComboBox<String> cmbMonth;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    public static Model.Table table;
    // End of variables declaration//GEN-END:variables

    public void loadData() {
        try {
            sql = "call selectSalary(?)";
            CallableStatement cst = con.prepareCall(sql);
            int month = Integer.parseInt(cmbMonth.getSelectedItem().toString());
            cst.setInt(1, month);
            ResultSet rs = cst.executeQuery();

            model.setRowCount(0);

            while (rs.next()) {
                String teacherID = rs.getString("teacherID");

                sql = "SELECT COUNT(*) AS count FROM salary WHERE teacherID=? AND month=?";
                PreparedStatement pstCheck = con.prepareStatement(sql);
                pstCheck.setString(1, teacherID);
                pstCheck.setInt(2, month);
                ResultSet rsCheck = pstCheck.executeQuery();
                String status = "";
                if (rsCheck.next() && rsCheck.getInt("count") > 0) {
                    status = "ຈ່າຍແລ້ວ";
                } else {
                    status = "ຍັງບໍ່ທັນຈ່າຍ";
                }
                String[] data = {
                    teacherID,
                    rs.getString("fullname"),
                    rs.getString("sex"),
                    status
                };
                model.addRow(data);
                
                for (int i = 0; i < table.getColumnCount(); i++) {
                        table.getColumnModel().getColumn(i).setCellRenderer(new SalaryTableCellRenderer());
                    }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
